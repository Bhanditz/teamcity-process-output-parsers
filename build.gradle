buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'com.github.rodm', name: 'gradle-teamcity-plugin', version: '0.9.1'
    }
}

ext {
    teamcityVersion = project.hasProperty('teamcityVersion') ? project.getProperty('teamcityVersion') : '9.1.6'
    teamcityDir = project.hasProperty('teamcityDir') ? project.getProperty('teamcityDir') : "$rootDir/servers/TeamCity-${teamcityVersion}"
    teamcityDataDir = "$rootDir/data/" + (teamcityVersion =~ /(\d+\.\d+).*/)[0][1]
    teamcityJavaHome = System.properties['java.home']
    teamcityGeneratedPoms = "$buildDir/generated-poms"
    teamcityInstall = project.hasProperty("teamcityInstall") ? project.getProperty("teamcityInstall") : false
    teamcityPluginVersion = project.hasProperty("teamcityPluginVersion") ? project.getProperty("teamcityPluginVersion") : 'SNAPSHOT'
}

allprojects {
    group = 'org.jetbrains.teamcity.output_parser'
    version = teamcityPluginVersion

    configurations {
        provided
    }

    if (!teamcityInstall) {
        project.tasks.findByName("downloadTeamCity")*.setEnabled(false)
    }
}

subprojects {
    apply plugin: 'java'
    dependencies {
        testCompile("org.jetbrains.teamcity:tests-support:${teamcityVersion}")
    }
    sourceCompatibility = "1.6"
    targetCompatibility = "1.6"

    test {
        useTestNG()
    }

    apply plugin: 'maven-publish'
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
    }

    task testsSourcesJar(type: Jar) {
        from sourceSets.test.allJava

    }
    task testsJar(type: Jar) {
        from sourceSets.test.output
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar {
                    classifier "sources"
                }
                artifact testsSourcesJar {
                    classifier "test-sources"
                }
                artifact testsJar {
                    classifier "test"
                }
            }
        }

        repositories {
            maven {
                url "${rootProject.buildDir}/repo"
            }
        }
    }
}

apply plugin: 'com.github.rodm.teamcity-server'
apply plugin: 'idea'
//apply from: 'export-teamcity-to-local-maven.gradle'

dependencies {
    agent project(path: ':text-translators-agent', configuration: 'plugin')
}

teamcity {
    version = teamcityVersion

    server {
        descriptor {
            name = "process-output-parsers"
            displayName = 'Framework for process output parsers'
            version = project.version
            vendorName = 'JetBrains, s.r.o.'
            vendorUrl = 'http://www.jetbrains.com'
            useSeparateClassloader = true
        }

        environments {
            teamcity91 {
                homeDir = file(teamcityDir)
                dataDir = file(teamcityDataDir)
                javaHome = file(teamcityJavaHome)
                serverOptions '-Xdebug'
                serverOptions '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5500'
                serverOptions '-Dteamcity.oauthConnections.enabled=true'
            }
        }
    }
}


idea {
    module {
        downloadJavadoc = false
        downloadSources = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}
